app:
  environment: "sandbox"
  replicaCount: 1
  image:
    repository: 973672886160.dkr.ecr.eu-west-1.amazonaws.com/admin-sandbox
    pullPolicy: Always
    tag: 49
  containers:
    ports:
      port: 8789
      proto: TCP
  livenessProbe:
    enabled: true
    port: 8789
    path: "/"
    initialDelaySeconds: 15
    periodSeconds: 5
  readinessProbe:
    enabled: true
    port: 8789
    path: "/"
    initialDelaySeconds: 60
    periodSeconds: 5
  imagePullSecrets:
    - name: dockerhub
  nameOverride: "nikas-sandbox-admin"
  fullnameOverride: "nikas-sandbox-admin"
  serviceAccount:
    create: yes
    annotations: {}
    name: "nikas-sandbox-admin"
  service:
    type: NodePort
    port: 80
    targetPort: 8789
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: cert-issuer
      external-dns.alpha.kubernetes.io/hostname: "sandbox-admin.anikipay.com"
      external-dns.alpha.kubernetes.io/ttl: "120"
    hosts:
      - host: sandbox-admin.anikipay.com
        paths:
        - path: /
          backend:
            service:
              name: "nikas-sandbox-admin"
              port: 
                number: 80
    tls:
     - secretName: nikas-sandbox-admin-cert-secret
       hosts:
         - sandbox-admin.anikipay.com
    ingressClassName: nginx-nonprod
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  autoscaling:
    enabled: false
  #   minReplicas: 1
  #   maxReplicas: 10
  #   targetCPUUtilizationPercentage: 85
  #   targetMemoryUtilizationPercentage: 80
  nodeSelector:
      Environment: "qa"
  tolerations: []
  affinity: {}
  app:
    labels:
      app: nikas-sandbox-admin
  env:
    - name: api
      value: nikas-sandbox-api
    - name: port
      value: "8789"
