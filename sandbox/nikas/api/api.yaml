environment: "sandbox"
replicaCount: 1

image:
  repository: 973672886160.dkr.ecr.eu-west-1.amazonaws.com/api-sandbox
  pullPolicy: Always
  tag: ""

containers:
  ports:
    port: 5001
    proto: TCP

livenessProbe:
  enabled: true
  port: 5001
  path: "/health"
  initialDelaySeconds: 15
  periodSeconds: 5

readinessProbe:
  enabled: true
  port: 5001
  path: "/health"
  initialDelaySeconds: 60
  periodSeconds: 5

imagePullSecrets:
  - name: dockerhub

nameOverride: "nikas-sandbox-api"

fullnameOverride: "nikas-sandbox-api"

serviceAccount:
  create: yes
  annotations: {}
  name: "nikas-sandbox-api"

service:
  type: NodePort
  port: 80
  targetPort: 5001

initContainers:
  - name: nikas-sandbox-api-db-migrate
    image: 973672886160.dkr.ecr.eu-west-1.amazonaws.com/api-sandbox:36
    command: ["flask", "db", "upgrade"]


ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: cert-issuer
    external-dns.alpha.kubernetes.io/hostname: "sandboxeks-api.anikipay.com"
    external-dns.alpha.kubernetes.io/ttl: "120"
  hosts:
    - host: sandboxeks-api.anikipay.com
      paths:
      - path: /
        backend:
          service:
            name: "nikas-sandbox-api"
            port: 
              number: 80
  tls:
   - secretName: nikas-sandbox-api-cert-secret
     hosts:
       - sandboxeks-api.anikipay.com
  ingressClassName: nginx-nonprod

resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"
      # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling: {}
#   enabled: true
#   minReplicas: 1
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 85
#   targetMemoryUtilizationPercentage: 80

nodeSelector:
    Environment: "qa"

tolerations: []

affinity: {}

app:
  labels:
    app: nikas-sandbox-api

env:
  - name: ENV
    value: "sandbox"
  - name: DEBUG
    value: "True"
  - name: SQLALCHEMY_TRACK_MODIFICATIONS
    value: "False"
  - name: IS_PRODUCTION
    value: "False"
  - name: ACCESS_TOKEN_EXPIRE_TIME
    value: "30"  
  - name: REDIS_HOST
    value: "redis"
  - name: REDIS_PORT
    value: "6379"
  - name: REDIS_DB
    value: "0"
  - name: REGION_NAME
    value: "eu-west-1"
  - name: AWS_ACCESS_KEY_ID
    value: "AKIAJX7ZQ3Z5Z7Z7Z7ZQ"
  - name: REQ_LOG_GROUP
    value: "/nikas-sandbox/ec2/linux/srv/www/api/logs/req_logs/reqlog.log"
  - name: SENDER_MAIL
    value: "no-reply@anikipay.com"
  - name: RATE_API_URL
    value: "https://sandbox-currency.rpdpymnt.com"
  - name: BTP_URL
    value: "https://testbtapi.rpdpymnt.com"
  - name: DIRECT_PAYMENT_URL
    value: "https://sandbox-api.paymentspace.net"
  - name: VOUCHER_URL       
    value: "https://sandbox-api.jeton.com"
  - name: CHECKOUT_URL       
    value: "https://sandbox-checkout.anikipay.com"
  - name: MERCHANT_PANEL_URL       
    value:  "https://sandbox-merchant.anikipay.com"
  - name: SWAGGER_UI
    value: "True"
  - name: REDIS_HOST
    value: "nikas-sandbox-api-redis"
  - name: SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: SECRET_KEY
  - name: SQLALCHEMY_DATABASE_URI
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: SQLALCHEMY_DATABASE_URI
  - name: API_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: API_KEY
  - name: CHECKOUT_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: CHECKOUT_KEY
  - name: CRON_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: CRON_KEY
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: AWS_SECRET_ACCESS_KEY
  - name: SENDGRID_API_KEY
    valueFrom:
      secretKeyRef:
        name: nikas-sandbox-api
        key: SENDGRID_API_KEY

externalSecrets:
  namespace: "nikas-sandbox"
  secretStoreKind: "SecretStore"
  secretStoreName: "sandbox-secret-store"
  data: 
    - remoteRef: 
        key: /nikas/sandbox/api/SECRET_KEY
      secretKey: SECRET_KEY
    - remoteRef: 
        key: /nikas/sandbox/api/SQLALCHEMY_DATABASE_URI
      secretKey: SQLALCHEMY_DATABASE_URI
    - remoteRef: 
        key: /nikas/sandbox/api/API_KEY
      secretKey: API_KEY
    - remoteRef: 
        key: /nikas/sandbox/api/CHECKOUT_KEY
      secretKey: CHECKOUT_KEY
    - remoteRef: 
        key: /nikas/sandbox/api/CRON_KEY
      secretKey: CRON_KEY
    - remoteRef: 
        key: /nikas/sandbox/api/AWS_SECRET_ACCESS_KEY
      secretKey: AWS_SECRET_ACCESS_KEY
    - remoteRef: 
        key: /nikas/sandbox/api/SENDGRID_API_KEY
      secretKey: SENDGRID_API_KEY
        

externalServices:
  services:
    - name: mysql
      externalName: nikas-sandbox-eks.cpxew3urmkbk.eu-west-1.rds.amazonaws.com
    - name: redis
      externalName: nikas-sbox-eks.w2tzyd.0001.euw1.cache.amazonaws.com

